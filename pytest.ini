[tool:pytest]
# Pytest Configuration for AssemblyAI Integration Tests

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
pythonpath = . src

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --maxfail=5
    --disable-warnings

# Markers
markers =
    integration: marks tests as integration tests (may use mocked APIs)
    performance: marks tests as performance tests (may be slow)
    real_api: marks tests that require real AssemblyAI API access
    slow: marks tests as slow running
    unit: marks tests as fast unit tests
    audio: marks tests related to audio processing
    config: marks tests related to configuration
    error: marks tests related to error handling
    concurrent: marks tests that test concurrent operations

# Asyncio configuration
asyncio_mode = auto

# Test timeout (in seconds)
timeout = 300

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    conftest.py
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2

[coverage:html]
directory = htmlcov