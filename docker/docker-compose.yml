version: '3.8'

services:
  ai-interviewer-bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ai-interviewer-bot
    restart: unless-stopped
    
    environment:
      # Required - set these in .env file
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Optional configuration with updated defaults
      - BOT_USERNAME=${BOT_USERNAME:-}
      - BOT_NAME=${BOT_NAME:-AI Interviewer}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - SESSION_TIMEOUT_MINUTES=${SESSION_TIMEOUT_MINUTES:-180}
      - MAX_CONVERSATION_HISTORY=${MAX_CONVERSATION_HISTORY:-100}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3-5-sonnet-20241022}
      - CLAUDE_MAX_TOKENS=${CLAUDE_MAX_TOKENS:-1000}
      - CLAUDE_TEMPERATURE=${CLAUDE_TEMPERATURE:-0.7}
      
      # Voice processing (optional)
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY:-}
      
      # Package-specific environment
      - PYTHONPATH=/app
      
    volumes:
      # Persist session data and logs - updated paths for new structure
      - ../data/sessions:/app/data/sessions
      - ../data/completed_sessions:/app/data/completed_sessions  
      - ../data/logs:/app/data/logs
      # Environment configuration
      - ../.env:/app/.env:ro
      
    # Optional: Health check endpoint
    # ports:
    #   - "8080:8080"
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Redis for session storage in production
  redis:
    image: redis:7-alpine
    container_name: ai-interviewer-redis
    restart: unless-stopped
    profiles:
      - production
    
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    volumes:
      - redis_data:/data
    
    # Uncomment for external access
    # ports:
    #   - "6379:6379"

  # Optional: PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: ai-interviewer-db
    restart: unless-stopped
    profiles:
      - production
    
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-ai_interviewer}
      - POSTGRES_USER=${POSTGRES_USER:-interviewer}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-change_me}
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    # Uncomment for external access
    # ports:
    #   - "5432:5432"

volumes:
  redis_data:
  postgres_data: